@using Dignite.Abp.DynamicForms.Matrix
@inject IFieldComponentSelector fieldComponentSelector
@inherits FieldComponentBase<MatrixForm,MatrixConfiguration>

<Field Horizontal="@(!IsChild)">
    <FieldLabel ColumnSize="ColumnSize.Is2.OnDesktop" hidden="@IsChild">@Field.DisplayName</FieldLabel>
    <FieldBody ColumnSize="ColumnSize.Is10.OnDesktop">
        @foreach (var block in MatrixBlocks)
        {
            var blockType = FormConfiguration.MatrixBlockTypes.FirstOrDefault(t => t.Name == block.MatrixBlockTypeName);
            if (blockType != null)
            {
                <Card>
                    <CardBody>
                        @foreach (var field in blockType.FieldDefinitions)
                        {
                            var component = fieldComponentSelector.Get(field.FormName);
                            var parameters = new Dictionary<string, object>();
                            parameters.Add("CustomizableObject", block);
                            parameters.Add("Field", field);
                            parameters.Add("IsChild", true);
                            <DynamicComponent Type="@component.GetType()" Parameters="@parameters"></DynamicComponent>                                       
                        }
                    </CardBody>
                </Card>
            }
        }
    </FieldBody>
</Field>
@code {
    protected List<MatrixBlock> MatrixBlocks = new List<MatrixBlock>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        MatrixBlocks = CustomizableObject.GetField<List<MatrixBlock>>(Field.Name, new List<MatrixBlock>());
    }
}