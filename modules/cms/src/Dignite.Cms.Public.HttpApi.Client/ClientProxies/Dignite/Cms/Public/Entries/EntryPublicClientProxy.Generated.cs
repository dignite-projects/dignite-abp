// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using Dignite.Cms.Public.Entries;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace Dignite.Cms.Public.Entries;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IEntryPublicAppService), typeof(EntryPublicClientProxy))]
public partial class EntryPublicClientProxy : ClientProxyBase<IEntryPublicAppService>, IEntryPublicAppService
{
    public virtual async Task<EntryDto> FindBySlugAsync(FindBySlugInput input)
    {
        return await RequestAsync<EntryDto>(nameof(FindBySlugAsync), new ClientProxyRequestTypeValue
        {
            { typeof(FindBySlugInput), input }
        });
    }

    public virtual async Task<EntryDto> FindPrevAsync(Guid id)
    {
        return await RequestAsync<EntryDto>(nameof(FindPrevAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<EntryDto> FindNextAsync(Guid id)
    {
        return await RequestAsync<EntryDto>(nameof(FindNextAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<EntryDto> GetAsync(Guid id)
    {
        return await RequestAsync<EntryDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<EntryDto>> GetListAsync(GetEntriesInput input)
    {
        return await RequestAsync<PagedResultDto<EntryDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetEntriesInput), input }
        });
    }
}
