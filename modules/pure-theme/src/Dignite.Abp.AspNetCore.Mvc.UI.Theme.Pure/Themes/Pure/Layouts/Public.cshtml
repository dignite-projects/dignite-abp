@using Dignite.Abp.AspNetCore.Mvc.UI.Theme.Pure.Bundling
@using Dignite.Abp.AspNetCore.Mvc.UI.Theme.Pure.Components.BottomNavbar
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Dignite.Abp.AspNetCore.Mvc.UI.Theme.Pure.Components.MainNavbar
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Basic.Themes.Basic.Components.PageAlerts
@using Dignite.Abp.AspNetCore.Mvc.UI.Theme.Pure.Components.PageFooter
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetScripts
@using Volo.Abp.AspNetCore.Mvc.UI.Widgets.Components.WidgetStyles
@using Volo.Abp.Localization
@using Volo.Abp.MultiTenancy;
@using Volo.Abp.Ui.LayoutHooks;
@{
    Layout = null;
    var containerClass = ViewBag.FluidLayout == true ? "container-fluid" : "container"; //TODO: Better and type-safe options
    var rtl = CultureHelper.IsRtl ? "rtl" : string.Empty;
}

<!DOCTYPE html>

<html lang="@CultureInfo.CurrentUICulture.Name" dir="@rtl">
<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Public)
    @await RenderSectionAsync("seotags", true)

    <script src="~/themes/pure/color-mode-switch.js"></script>
    <abp-style-bundle name="@PureThemeBundles.Styles.Public" />

    @await Component.InvokeAsync(typeof(WidgetStylesViewComponent))

    @await RenderSectionAsync("styles", false)

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Public)
</head>
<body class="abp-public-layout @rtl">
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Public)
    
    @(await Component.InvokeAsync<MainNavbarViewComponent>())
    @(await Component.InvokeAsync<BottomNavbarViewComponent>())
    
    @RenderSection("content_toolbar", false)

    <div class="@containerClass">
        @(await Component.InvokeAsync<PageAlertsViewComponent>())
        @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.First, StandardLayouts.Public)
        @RenderBody()
        @await Component.InvokeLayoutHookAsync(LayoutHooks.PageContent.Last, StandardLayouts.Public)
    </div>

    @(await Component.InvokeAsync<PageFooterViewComponent>())

    <abp-script-bundle name="@PureThemeBundles.Scripts.Pubilc" />

    <script src="~/Abp/ApplicationLocalizationScript?cultureName=@CultureInfo.CurrentUICulture.Name"></script>
    <script src="~/Abp/ApplicationConfigurationScript"></script>
    <script src="~/Abp/ServiceProxyScript"></script>

    @await Component.InvokeAsync(typeof(WidgetScriptsViewComponent))

    @await RenderSectionAsync("scripts", false)

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Public)
</body>
</html>
