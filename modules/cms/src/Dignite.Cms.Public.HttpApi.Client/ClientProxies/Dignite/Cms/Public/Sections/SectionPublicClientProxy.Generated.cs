// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using Dignite.Cms.Public.Sections;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace Dignite.Cms.Public.Sections;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(ISectionPublicAppService), typeof(SectionPublicClientProxy))]
public partial class SectionPublicClientProxy : ClientProxyBase<ISectionPublicAppService>, ISectionPublicAppService
{
    public virtual async Task<SectionDto> FindByNameAsync(string name)
    {
        return await RequestAsync<SectionDto>(nameof(FindByNameAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), name }
        });
    }

    public virtual async Task<SectionDto> FindByEntityPathAsync(string entityPath)
    {
        return await RequestAsync<SectionDto>(nameof(FindByEntityPathAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), entityPath }
        });
    }

    public virtual async Task<ListResultDto<SectionDto>> GetListAsync(GetSectionsInput input)
    {
        return await RequestAsync<ListResultDto<SectionDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetSectionsInput), input }
        });
    }

    public virtual async Task<SectionDto> GetAsync(Guid id)
    {
        return await RequestAsync<SectionDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<SectionDto> GetDefaultAsync()
    {
        return await RequestAsync<SectionDto>(nameof(GetDefaultAsync));
    }
}
