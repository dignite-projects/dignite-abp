// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using Dignite.Cms.Admin.Sections;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace Dignite.Cms.Admin.Sections;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IEntryTypeAdminAppService), typeof(EntryTypeAdminClientProxy))]
public partial class EntryTypeAdminClientProxy : ClientProxyBase<IEntryTypeAdminAppService>, IEntryTypeAdminAppService
{
    public virtual async Task<EntryTypeDto> CreateAsync(CreateEntryTypeInput input)
    {
        return await RequestAsync<EntryTypeDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(CreateEntryTypeInput), input }
        });
    }

    public virtual async Task<EntryTypeDto> UpdateAsync(Guid id, UpdateEntryTypeInput input)
    {
        return await RequestAsync<EntryTypeDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(UpdateEntryTypeInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<EntryTypeDto> GetAsync(Guid id)
    {
        return await RequestAsync<EntryTypeDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<bool> NameExistsAsync(EntryTypeNameExistsInput input)
    {
        return await RequestAsync<bool>(nameof(NameExistsAsync), new ClientProxyRequestTypeValue
        {
            { typeof(EntryTypeNameExistsInput), input }
        });
    }
}
