{
  "modules": {
    "MultiTenancyDomains": {
      "rootPath": "MultiTenancyDomains",
      "remoteServiceName": "MultiTenancyDomains",
      "controllers": {
        "Dignite.Abp.MultiTenancyDomains.TenantDomainController": {
          "controllerName": "TenantDomain",
          "controllerGroupName": "TenantDomain",
          "isRemoteService": true,
          "isIntegrationService": false,
          "apiVersion": null,
          "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainController",
          "interfaces": [
            {
              "type": "Dignite.Abp.MultiTenancyDomains.ITenantDomainAppService",
              "name": "ITenantDomainAppService",
              "methods": [
                {
                  "name": "FindByDomainNameAsync",
                  "parametersOnMethod": [
                    {
                      "name": "domainName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto",
                    "typeSimple": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto"
                  }
                },
                {
                  "name": "DomainNameExistsAsync",
                  "parametersOnMethod": [
                    {
                      "name": "domainName",
                      "typeAsString": "System.String, System.Private.CoreLib",
                      "type": "System.String",
                      "typeSimple": "string",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "System.Boolean",
                    "typeSimple": "boolean"
                  }
                },
                {
                  "name": "FindByCurrentTenantAsync",
                  "parametersOnMethod": [],
                  "returnValue": {
                    "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto",
                    "typeSimple": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto"
                  }
                },
                {
                  "name": "UpdateAsync",
                  "parametersOnMethod": [
                    {
                      "name": "input",
                      "typeAsString": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput, Dignite.Abp.MultiTenancyDomains.Application.Contracts",
                      "type": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput",
                      "typeSimple": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput",
                      "isOptional": false,
                      "defaultValue": null
                    }
                  ],
                  "returnValue": {
                    "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto",
                    "typeSimple": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto"
                  }
                }
              ]
            }
          ],
          "actions": {
            "DomainNameExistsAsyncByDomainName": {
              "uniqueName": "DomainNameExistsAsyncByDomainName",
              "name": "DomainNameExistsAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy-domains/tenant-domain/domain-name-exists",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "domainName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "domainName",
                  "name": "domainName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Boolean",
                "typeSimple": "boolean"
              },
              "allowAnonymous": null,
              "implementFrom": "Dignite.Abp.MultiTenancyDomains.ITenantDomainAppService"
            },
            "FindByCurrentTenantAsync": {
              "uniqueName": "FindByCurrentTenantAsync",
              "name": "FindByCurrentTenantAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy-domains/tenant-domain/find-by-current-tenant",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto",
                "typeSimple": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Dignite.Abp.MultiTenancyDomains.ITenantDomainAppService"
            },
            "FindByDomainNameAsyncByDomainName": {
              "uniqueName": "FindByDomainNameAsyncByDomainName",
              "name": "FindByDomainNameAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy-domains/tenant-domain/find-by-domain-name",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "domainName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "domainName",
                  "name": "domainName",
                  "jsonName": null,
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto",
                "typeSimple": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Dignite.Abp.MultiTenancyDomains.ITenantDomainAppService"
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy-domains/tenant-domain",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput, Dignite.Abp.MultiTenancyDomains.Application.Contracts",
                  "type": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput",
                  "typeSimple": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "jsonName": null,
                  "type": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput",
                  "typeSimple": "Dignite.Abp.MultiTenancyDomains.UpdateTenantDomainInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto",
                "typeSimple": "Dignite.Abp.MultiTenancyDomains.TenantDomainDto"
              },
              "allowAnonymous": null,
              "implementFrom": "Dignite.Abp.MultiTenancyDomains.ITenantDomainAppService"
            }
          }
        }
      }
    }
  },
  "types": {}
}